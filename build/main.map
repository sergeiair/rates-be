{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./config/index.js","webpack:///./db/helpers/responseWrapper.js","webpack:///./db/schemes/prediction.js","webpack:///./db/schemes/rates.js","webpack:///./db/schemes/session.js","webpack:///./db/schemes/user.js","webpack:///./guards/authMiddlware.js","webpack:///./logger/AppLogger.js","webpack:///./logger/index.js","webpack:///./mailer/mailer.js","webpack:///./main.js","webpack:///./middlewares.js","webpack:///./modules/analyze/_routes/index.js","webpack:///./modules/analyze/controller.js","webpack:///./modules/analyze/data.service.js","webpack:///./modules/analyze/index.js","webpack:///./modules/predictions-scheduler/_routes/index.js","webpack:///./modules/predictions-scheduler/controller.js","webpack:///./modules/predictions-scheduler/data.service.js","webpack:///./modules/predictions-scheduler/index.js","webpack:///./modules/predictions-scheduler/predictions-scheduler.service.js","webpack:///./modules/predictions/_routes/index.js","webpack:///./modules/predictions/controller.js","webpack:///./modules/predictions/data.service.js","webpack:///./modules/predictions/index.js","webpack:///./modules/rates-scheduler/_routes/index.js","webpack:///./modules/rates-scheduler/constants.js","webpack:///./modules/rates-scheduler/controller.js","webpack:///./modules/rates-scheduler/data.service.js","webpack:///./modules/rates-scheduler/index.js","webpack:///./modules/rates-scheduler/rates-scheduler.service.js","webpack:///./modules/rates/_routes/index.js","webpack:///./modules/rates/controller.js","webpack:///./modules/rates/data.service.js","webpack:///./modules/rates/index.js","webpack:///./modules/users/_routes/index.js","webpack:///./modules/users/controller.js","webpack:///./modules/users/data.service.js","webpack:///./modules/users/index.js","webpack:///./modules/users/sessionController.js","webpack:///./routes.js","webpack:///./static/rates.js","webpack:///./tf/predictionTFService.js","webpack:///./utils/email.js","webpack:///./utils/hash.js","webpack:///./utils/network.js","webpack:///./utils/session.js","webpack:///external \"@koa/cors\"","webpack:///external \"@tensorflow/tfjs-node\"","webpack:///external \"axios\"","webpack:///external \"bcrypt\"","webpack:///external \"fs\"","webpack:///external \"koa\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-mount\"","webpack:///external \"koa-session-auth\"","webpack:///external \"koa-static\"","webpack:///external \"koa-trie-router\"","webpack:///external \"md5\"","webpack:///external \"node-schedule\"","webpack:///external \"nodemailer\"","webpack:///external \"ramda\"","webpack:///external \"realm\"","webpack:///external \"uuid\""],"names":["app","name","version","server","port","static_dir","root","options","ResponseWrapper","data","value","isObject","_data","_code","error","err","_error","code","a","constructor","Object","PredictionSchema","primaryKey","properties","id","predRate","realRate","finalRate","pair","owner","time","verifyTime","forecast","volatility","RateSchema","base","type","indexed","USD","EUR","NOK","GBP","RUB","CHF","PLN","SessionSchema","expired","info","UserSchema","email","pw","restoreToken","default","active","controller","SessionController","UsersDataService","authMiddleware","ctx","next","session","isNew","status","storedSession","getSession","getUserEmailFromSession","Date","now","fs","require","AppLogger","is","stack","logFile","write","split","message","toString","String","e","console","createWriteStream","flags","process","stdout","nodemailer","Mailer","sendPwReset","to","html","emailTransporter","sendMail","from","subject","text","createTransport","host","service","secure","auth","user","pass","debug","logger","Koa","env","HOST","PORT","config","middlewares","listen","cors","mount","sessionConfig","useToken","useCookie","key","maxAge","autoCommit","overwrite","httpOnly","signed","rolling","renew","genid","warn","use","throw","body","emit","keys","bodyParser","serve","routes","on","Router","router","AnalyzeController","AnalyzeDataService","PredictionTFService","getCompletedPredictions","post","getAllCompletedPredictions","request","map","dissoc","middleware","_dataServiceInstance","_tfsInstance","dataService","tfsService","params","schema","deleteRealmIfMigrationNeeded","path","Realm","open","then","realm","objects","filtered","dateStart","dateEnd","sorted","catch","PredictionsSchedulerController","PredictionsSchedulerDataService","enable","getStatus","checkStatus","get","bindSchedulerService","PredictionsSchedulerService","start","startPendingItemsReview","fillPendingPredictions","bind","StaticRatesStore","ratesHaveValue","latestRates","rates","currentEpoch","pendingItems","forEach","item","replace","parseFloat","close","scheduler","currency","job","instance","scheduleJob","stop","cancelJob","PredictionsController","PredictionsDataService","create","storeSingle","getAll","items","predictions","prepareTFS","prepareTFService","verifySingle","getPredRateByHistory","result","getComputedPrediction","getPreparedPredData","getVolatilityByPair","length","data4TF","pred","undefined","trainModel","getResult","uuidv1","UpdateMode","Never","Promise","resolve","prediction","objectForPrimaryKey","RatesSchedulerController","RatesSchedulerDataService","API_KEY","DATA_SOURCE_ENDPOINT","RatesSchedulerService","dataFetched","requestDataImidiate","isSaveAllowed","price","updateStaticStore","set","isNewValue","USDEUR","USDNOK","USDGBP","USDRUB","USDCHF","USDPLN","toISOString","axios","requestData","isRequiredTimePassed","updatePrevRequestTime","log","toLocaleTimeString","endpoint","response","RatesController","RatesDataService","getRates","second","query","getPair","getHistory","limit","number","slice","UsersController","register","resp","login","getUser","storeSession","hashedEmail","getClientIp","logout","destroySession","restore","initRestore","createPw","v","registerUser","ip","getRestoreToken","token","getRestoreHTML","getUserUnsafe","userConfig","bcrypt","md5","Modified","delete","reject","emailToRestoreToken","userNotFound","isEmpty","ratesScheduler","predictionsScheduler","users","analyze","latestBase","prevSet","requiredMsGap","tf","sequential","configure","init","getPrediction","inputMax","inputMinVal","labelMinVal","labelMax","tidy","normalizedPredTnsr","tensor2d","normalizedPredVals","sub","div","predResult","model","predict","reshape","readablePred","mul","add","dataSync","getNormalizedValues","inputTnsr","max","min","labelTnsr","inputs","labels","initTensors","util","shuffle","initInputTnsr","initLabelsTnsr","tensor","layers","dense","units","inputShape","useBias","compile","loss","optimizer","destroy","dispose","epochs","batchSize","isRunning","fit","req","headers"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.js\");\n","'use strict';\n\nexport default {\n  app: {\n    name: 'Koa',\n    version: '1.0.0'\n  },\n  server: {\n    port: 3333\n  },\n  static_dir: {\n    root: './static',\n    options: {}\n  },\n}\n","\nexport class ResponseWrapper {\n    _data = null;\n    _error = null;\n    _code = null;\n\n    set data(value) {\n        if (this.isObject(value)) {\n            this._data = { ...value };\n        }\n\n        this._code = 200;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    set error(err) {\n        this._error = err;\n        this._code = 503;\n    }\n\n    get code() {\n        return this._code;\n    }\n\n    set code(code) {\n        this._code = code;\n    }\n\n    isObject(a) {\n        return (!!a) && (a.constructor === Object);\n    };\n}\n","\nexport const PredictionSchema = {\n    name: 'Prediction',\n    primaryKey: 'id',\n    properties: {\n        id: 'string',\n        predRate: 'double',\n        realRate: 'double',\n        finalRate: 'double',\n        pair:  'string',\n        owner:  'string',\n        time: 'int',\n        verifyTime: 'int',\n        forecast: 'int',\n        volatility: 'int'\n    }\n};\n","\nexport const RateSchema = {\n    name: 'Rate',\n    primaryKey: 'id',\n    properties: {\n        id: 'int',\n        base: {type: 'string', indexed: true},\n        USD: 'double',\n        EUR: 'double',\n        NOK: 'double',\n        GBP: 'double',\n        RUB: 'double',\n        CHF: 'double',\n        PLN: 'double',\n        time: 'string',\n    }\n};\n","\nexport const SessionSchema = {\n    name: 'Session',\n    primaryKey: 'id',\n    properties: {\n        expired: 'int',\n        id: 'string',\n        info: 'string'\n    }\n};\n","\nexport const UserSchema = {\n    name: 'User',\n    primaryKey: 'email',\n    properties: {\n        id: 'int',\n        email: {type: 'string', indexed: true},\n        name: 'string',\n        pw: 'string',\n        restoreToken: {type: 'string', default: ''},\n        active: {type: 'bool', default: true}\n    }\n};\n","import UsersDataService from \"../modules/users/data.service\";\nimport SessionController from \"../modules/users/sessionController\";\nimport {getUserEmailFromSession} from \"../utils/session\";\nimport {getClientIp} from \"../utils/network\";\n\nconst controller = new SessionController(new UsersDataService());\n\nexport const authMiddleware = async (ctx, next) => {\n    if (ctx.session.isNew) {\n        ctx.data = null;\n        ctx.status = 401;\n    } else {\n        const storedSession = await controller.getSession(getUserEmailFromSession(ctx));\n\n        if (!storedSession || storedSession.expired <= Date.now()) {\n            ctx.data = null;\n            ctx.status = 401;\n        }\n    }\n\n    ctx.type = 'json';\n    await next()\n};\n","import {is} from \"ramda\";\n\n\nconst fs = require('fs');\n\nexport class AppLogger {\n\n    static logFile = fs.createWriteStream('./logger/files/log', { flags: 'a' });\n    static logStdout = process.stdout;\n\n    static error(error) {\n        try {\n            if (is(Object, error)) {\n                if (error.stack) {\n                    this.logFile.write(`${error.stack.split(')')[0]} \\n`);\n                } else if (!error.stack) {\n                    this.logFile.write(`${error.message} \\n`);\n                } else {\n                    this.logFile.write(`Unknown error ${error.toString()} \\n`);\n                }\n            } else if (is(String, error)) {\n                this.logFile.write(`${error} \\n`);\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n    }\n}\n","export * from './AppLogger';\n","\nconst nodemailer = require('nodemailer');\n\n\nexport class Mailer {\n    static emailTransporter = nodemailer.createTransport({\n        host: 'smtp.gmail.com',\n        port: 465,\n        service: 'gmail',\n        secure: false,\n        auth: {\n            user: 'ratespalmail@gmail.com',\n            pass: 'rer9Ohdgmail'\n        },\n        debug: false,\n        logger: true\n    });\n\n    static sendPwReset(to, html) {\n        return this.emailTransporter.sendMail({\n            from: '\"Rates pal\" <noreply@ratespal.com>',\n            to,\n            subject: \"Reset password\",\n            text: \"\",\n            html,\n        });\n    }\n}\n","import config from \"./config\";\nimport middlewares from \"./middlewares\";\n\nconst Koa = require('koa');\nconst app = new Koa();\nconst host = process.env.HOST || '127.0.0.1';\nconst port = process.env.PORT || config.server.port;\n\nmiddlewares(app);\n\napp.listen(port, host);\n","import serve from 'koa-static'\nimport bodyParser from 'koa-bodyparser'\nimport config from \"./config\";\nimport routes from \"./routes\";\nimport {AppLogger} from \"./logger/AppLogger\";\n\nconst cors = require('@koa/cors');\nconst mount = require('koa-mount');\nconst session = require('koa-session-auth');\n\nexport const sessionConfig = {\n    useToken: true, /** (boolean) use token-session or not (default true) */\n    useCookie: false, /** (boolean) use cookie-session or not (default true) */\n    key: 'GoAway', /** (string) cookie and token key (default is KoaToken) */\n    /** (number || 'session') maxAge in ms (default is 1 days) */\n    /** 'session' will result in a cookie that expires when session/browser is closed */\n    /** Warning: If a session cookie is stolen, this cookie will never expire */\n    maxAge: 86400000 * 7,\n    autoCommit: true, /** (boolean) automatically commit headers (default true) */\n    overwrite: true, /** (boolean) can overwrite or not (default true) */\n    httpOnly: true, /** (boolean) httpOnly or not (default true) */\n    signed: true, /** (boolean) signed or not (default true) */\n    rolling: false, /** (boolean) Force a session identifier cookie to be set on every response. The expiration is reset to the original maxAge, resetting the expiration countdown. (default is false) */\n    renew: false, /** (boolean) renew session when session is nearly expired, so we can always keep user logged in. (default is false)*/\n    genid: (ctx) => AppLogger.warn(ctx)\n};\n\nexport default (app) => {\n    app.use(async (ctx, next) => {\n        try {\n            await next();\n\n            if (ctx.status === 404) {\n                ctx.throw(404)\n            }\n\n            if (ctx.status === 401) {\n                ctx.throw(401)\n            }\n\n            if (ctx.status === 200) {\n                ctx.body = {\n                    status: 200,\n                    data: ctx.body\n                }\n            }\n\n        } catch (err) {\n            AppLogger.error(err);\n\n            ctx.status = err.status || 500;\n            ctx.type = 'json';\n            ctx.body = {\n                status: ctx.status,\n                message: err.message\n            };\n\n            ctx.app.emit('error', err, ctx);\n\n        }\n    });\n\n    switch (process.env.NODE_ENV) {\n        case 'development':\n            app.use(cors());\n            break;\n    }\n\n    app.keys = ['11223344qqwweerr'];\n    app.use(bodyParser());\n    app.use(serve(config.static_dir.root));\n    app.use(session(sessionConfig, app));\n    app.use(mount('/api', routes()));\n\n    app.on('error', (err) => {\n        AppLogger.error(err.message);\n    });\n\n\n\n\n}\n\n\n","'use strict';\n\nimport {authMiddleware} from \"../../../guards/authMiddlware\";\nimport AnalyzeController from \"../controller\";\nimport AnalyzeDataService from \"../data.service\";\nimport {getUserEmailFromSession} from \"../../../utils/session\";\nimport {PredictionTFService} from \"../../../tf/predictionTFService\";\nimport {dissoc, map} from \"ramda\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new AnalyzeController(\n    new AnalyzeDataService(),\n    new PredictionTFService()\n);\n\nexport const getCompletedPredictions = () => {\n  router.post('/completed', authMiddleware, async (ctx, next) => {\n    try {\n      const data = await controller.getAllCompletedPredictions(\n          getUserEmailFromSession(ctx),\n          ctx.request.body\n      );\n\n      ctx.body = { message: 'Done', data: map(dissoc('owner'), data) };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\n","'use strict';\n\nexport default class AnalyzeController {\n\n    tfsService;\n    dataService;\n\n    constructor(_dataServiceInstance, _tfsInstance) {\n        this.dataService = _dataServiceInstance;\n        this.tfsService = _tfsInstance;\n    }\n\n    getAllCompletedPredictions(email, params) {\n        return this.dataService.getAllCompletedPredictions(email, params);\n    }\n\n\n\n\n}\n","import Realm from \"realm\";\nimport {PredictionSchema} from \"../../db/schemes/prediction\";\nimport {AppLogger} from \"../../logger\";\n\nexport default class AnalyzeDataService {\n\n    config = {\n        schema: [PredictionSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/predictions/01.realm',\n    };\n\n    getAllCompletedPredictions(email, params) {\n        return Realm.open(this.config)\n            .then(realm => {\n                return realm.objects('Prediction')\n                    .filtered(`owner = \"${email}\" AND finalRate != ${0} AND time >= ${params.dateStart} AND time <= ${params.dateEnd}`)\n                    .sorted('time', true);\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {getCompletedPredictions} from \"./_routes\";\n\nconst router = new Router();\n\nexport default () => {\n  router.post(getCompletedPredictions());\n\n  return router.middleware()\n}\n","'use strict';\n\nimport PredictionsSchedulerController from \"../controller\";\nimport PredictionsSchedulerDataService from \"../data.service\";\nimport {authMiddleware} from \"../../../guards/authMiddlware\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new PredictionsSchedulerController(new PredictionsSchedulerDataService());\n\nexport const enable = () => {\n  router.post('/enable', authMiddleware, async (ctx, next) => {\n    try {\n      controller.enable();\n\n      ctx.body = { message: 'Done', status: await controller.getStatus() };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const checkStatus = () => {\n  router.get('/status', authMiddleware, async (ctx, next) => {\n    try {\n      const status = await controller.getStatus();\n\n      ctx.body = { message: 'Done', status: status };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n","'use strict';\n\nimport PredictionsSchedulerService from \"./predictions-scheduler.service\";\nimport {StaticRatesStore} from \"../../static/rates\";\n\nexport default class PredictionsSchedulerController {\n\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n        this.bindSchedulerService();\n        this.enable();\n    }\n\n    enable() {\n        PredictionsSchedulerService.start('USD');\n    }\n\n    getStatus() {\n        return PredictionsSchedulerService.status;\n    }\n\n    bindSchedulerService() {\n        PredictionsSchedulerService.startPendingItemsReview = this.fillPendingPredictions.bind(this);\n    }\n\n    fillPendingPredictions() {\n        if (StaticRatesStore.ratesHaveValue()) {\n            this.dataService.fillPendingPredictions(StaticRatesStore.latestRates);\n        }\n    }\n\n}\n","import Realm from \"realm\";\nimport {PredictionSchema} from \"../../db/schemes/prediction\";\nimport {AppLogger} from \"../../logger\";\n\nexport default class PredictionsSchedulerDataService {\n\n    config = {\n        schema: [PredictionSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/predictions/01.realm',\n    };\n\n    fillPendingPredictions(rates) {\n        return Realm.open(this.config)\n            .then(realm => {\n                const currentEpoch = Date.now();\n                const pendingItems = realm.objects('Prediction')\n                    .filtered(`finalRate = 0 AND time < ${currentEpoch}`) || [];\n\n                realm.write(() => {\n                    pendingItems.forEach((item) => {\n                        const pair = item.pair.replace('/', '');\n\n                        item.finalRate = parseFloat(rates[pair]);\n                        item.verifyTime = currentEpoch;\n                    });\n                });\n\n                realm.close();\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n\n\n    }\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {enable, checkStatus} from './_routes';\n\nconst router = new Router();\n\nexport default () => {\n  router.post(enable());\n  router.get(checkStatus());\n\n  return router.middleware()\n}\n","\nconst scheduler = require('node-schedule');\n\nexport default class PredictionsSchedulerService {\n\n    static instance = scheduler;\n\n    static job = null;\n\n    static status = 0;\n\n    static start(currency) {\n        this.job = this.instance.scheduleJob('*/30 * * * * *', () => this.startPendingItemsReview(currency));\n        this.status = 1;\n    }\n\n    static stop() {\n        this.instance.cancelJob(this.job);\n        this.status = 0;\n    }\n\n    static startPendingItemsReview(currency) {}\n\n\n}\n","'use strict';\n\nimport PredictionsController from \"../controller\";\nimport PredictionsDataService from \"../data.service\";\nimport {authMiddleware} from \"../../../guards/authMiddlware\";\nimport {getUserEmailFromSession} from \"../../../utils/session\";\nimport {dissoc, map} from \"ramda\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new PredictionsController(\n    new PredictionsDataService()\n);\n\nexport const create = () => {\n  router.post('/', authMiddleware, async (ctx, next) => {\n    try {\n      controller.storeSingle({\n        ...ctx.request.body,\n        owner: getUserEmailFromSession(ctx)\n      });\n\n      ctx.body = { message: 'Done!' };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\nexport const getAll = () => {\n  router.get('/', authMiddleware, async (ctx, next) => {\n    try {\n      const items = await controller.getAll(getUserEmailFromSession(ctx));\n\n      ctx.body = { message: 'Done fetch!', predictions: map(dissoc('owner'), items) };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const prepareTFS = () => {\n  router.post('/prepare-for-history', authMiddleware, async (ctx, next) => {\n    try {\n      const status = await controller.prepareTFService(\n          ctx.request.body,\n          getUserEmailFromSession(ctx)\n      );\n\n      ctx.body = { message: 'Done!', status };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const verifySingle = () => {\n  router.post('/verify', authMiddleware, async (ctx, next) => {\n    try {\n      const data = await controller.verifySingle(\n          ctx.request.body,\n          getUserEmailFromSession(ctx)\n      );\n\n      ctx.body = { message: 'Done!', data };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const getPredRateByHistory = () => {\n  router.post('/compute-current', authMiddleware, async (ctx, next) => {\n    try {\n      const result = await controller.getComputedPrediction(\n          ctx.request.body\n      );\n\n      ctx.body = { message: 'Done!', result };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n","'use strict';\n\nimport {PredictionTFService} from \"../../tf/predictionTFService\";\nimport {StaticRatesStore} from \"../../static/rates\";\n\nexport default class PredictionsController {\n\n    tfsService;\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n    }\n\n    getAll(email) {\n        return this.dataService.getAll(email);\n    }\n\n    storeSingle(data) {\n        this.dataService.storeSingle(this.getPreparedPredData(data));\n    }\n\n    verifySingle(data, email) {\n        return this.dataService.verifySingle(data.id, email, StaticRatesStore.latestRates);\n    }\n\n    getPreparedPredData(data) {\n        return {\n            ...data,\n            volatility: this.getVolatilityByPair(data.volatility, data.pair)\n        }\n    }\n\n    getVolatilityByPair(value, pair) {\n        if (!!value) {\n            return value;\n        } else {\n            switch (pair) {\n                case 'USD/CHF':\n                    return 1;\n                case 'USD/GBP':\n                case 'USD/EUR':\n                    return 2;\n                case 'USD/RUB':\n                    return 4;\n                default:\n                    return 3;\n            }\n        }\n    }\n\n    async prepareTFService(params, email) {\n        const predictions = await this.dataService.getAllCompletedPredictions(email, params.pair);\n\n        if (!!predictions && predictions.length) {\n            const data4TF = predictions.map((pred) => ({\n                predRate: pred.predRate,\n                realRate: pred.realRate,\n                finalRate: pred.finalRate,\n                forecast: pred.forecast,\n                volatility: pred.volatility\n            }));\n\n            this.tfsService = undefined;\n            this.tfsService = new PredictionTFService(data4TF);\n\n            return await this.tfsService.trainModel(500, 32);\n        } else {\n            return 'empty'\n        }\n    }\n\n    getComputedPrediction(params) {\n        return this.tfsService.getResult([\n            this.getVolatilityByPair(params.volatility, params.pair),\n            params.forecast,\n            params.realRate,\n            params.predRate\n        ], 500);\n    }\n}\n","import {PredictionSchema} from \"../../db/schemes/prediction\";\nimport Realm from \"realm\";\nimport {AppLogger} from \"../../logger\";\nimport {v1 as uuidv1} from 'uuid';\nimport {dissoc} from \"ramda\";\n\nexport default class PredictionsDataService {\n\n    config = {\n        schema: [PredictionSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/predictions/01.realm',\n    };\n\n    getAll(email) {\n        return Realm.open(this.config)\n            .then(realm => {\n                return realm.objects('Prediction')\n                    .filtered(`owner = \"${email}\"`)\n                    .sorted('time', true);\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    storeSingle(data) {\n        Realm.open(this.config)\n            .then(realm => {\n\n                realm.write(() => {\n                    realm.create('Prediction', {\n                        ...data,\n                        finalRate: 0,\n                        verifyTime: 0,\n                        id: uuidv1()\n                    }, Realm.UpdateMode.Never);\n                });\n\n                realm.close();\n            }).catch((e) => AppLogger.error(e));\n    }\n\n    verifySingle(id, email, rates) {\n        return Realm.open(this.config)\n            .then(async realm => {\n                return await new Promise((resolve) => {\n                    const prediction = realm.objectForPrimaryKey('Prediction', id);\n\n                    if (!!prediction && prediction.owner === email && !prediction.finalRate) {\n                        realm.write(() => {\n                            const pair = prediction.pair.replace('/', '');\n\n                            prediction.finalRate = parseFloat(rates[pair]);\n                            prediction.verifyTime = Date.now();\n\n                            resolve(dissoc('owner', prediction))\n                        });\n\n                        realm.close();\n                    } else {\n                        resolve(null);\n                    }\n                });\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    getAllCompletedPredictions(email, pair) {\n        return Realm.open(this.config)\n            .then(realm => {\n                return realm.objects('Prediction')\n                    .filtered(`owner = \"${email}\" AND finalRate != ${0} AND pair = \"${pair}\"`);\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {create, getAll, getPredRateByHistory, prepareTFS, verifySingle} from './_routes';\n\nconst router = new Router();\n\nexport default () => {\n  router.post(create());\n  router.post(getPredRateByHistory());\n  router.post(prepareTFS());\n  router.post(verifySingle());\n  router.get(getAll());\n\n  return router.middleware()\n}\n","'use strict';\n\nimport RatesSchedulerController from \"../controller\";\nimport RatesSchedulerDataService from \"../data.service\";\nimport {authMiddleware} from \"../../../guards/authMiddlware\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new RatesSchedulerController(new RatesSchedulerDataService());\n\nexport const enable = () => {\n  router.post('/enable', authMiddleware, async (ctx, next) => {\n    try {\n      controller.enable();\n\n      ctx.body = { message: 'Done', status: await controller.getStatus() };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const checkStatus = () => {\n  router.get('/status', authMiddleware, async (ctx, next) => {\n    try {\n      const status = await controller.getStatus();\n\n      ctx.body = { message: 'Done', status: status };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n","\nconst API_KEY = 'WtgXjLLRpYZqNwOOXId0';\n\nexport const DATA_SOURCE_ENDPOINT = 'https://fxmarketapi.com/apilive?api_key=' + API_KEY;\n","'use strict';\n\nimport RatesSchedulerService from \"./rates-scheduler.service\";\nimport {StaticRatesStore} from \"../../static/rates\";\n\nexport default class RatesSchedulerController {\n\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n        this.bindSchedulerService();\n        this.enable()\n    }\n\n    bindSchedulerService() {\n        RatesSchedulerService.dataFetched = this.dataFetched.bind(this);\n    }\n\n    enable() {\n        RatesSchedulerService.start('USD');\n        RatesSchedulerService.requestDataImidiate('USD')\n    }\n\n    getStatus() {\n        return RatesSchedulerService.status;\n    }\n\n    dataFetched(currency, data) {\n        if (this.isSaveAllowed(currency, data.price || {})) {\n            this.dataService.storeSingle(currency, data.price || {});\n        }\n\n        this.updateStaticStore(currency, data.price || {});\n    }\n\n    updateStaticStore(currency, rates) {\n        StaticRatesStore.set(currency, rates);\n    }\n\n    isSaveAllowed(currency, rates) {\n        return StaticRatesStore.isNewValue(currency, rates);\n    }\n\n}\n","import Realm from \"realm\";\nimport {RateSchema} from \"../../db/schemes/rates\";\nimport {AppLogger} from \"../../logger\";\n\nexport default class RatesSchedulerDataService {\n\n    validCurrencies = ['USD', 'EUR', 'NOK', 'GBP', 'RUB', 'CHF', 'PLN'];\n\n    config = {\n        schema: [RateSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/rates/01.realm',\n    };\n\n\n    storeSingle(currency, rates) {\n        Realm.open(this.config)\n            .then(realm => {\n                realm.write(() => {\n                    realm.create('Rate', {\n                        id: Date.now(),\n                        base: currency,\n                        USD: 1,\n                        EUR: parseFloat(rates.USDEUR),\n                        NOK: parseFloat(rates.USDNOK),\n                        GBP: parseFloat(rates.USDGBP),\n                        RUB: parseFloat(rates.USDRUB),\n                        CHF: parseFloat(rates.USDCHF),\n                        PLN: parseFloat(rates.USDPLN),\n                        time: new Date().toISOString()\n                    }, Realm.UpdateMode.Never);\n                });\n\n                realm.close();\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {enable, checkStatus} from './_routes';\n\nconst router = new Router();\n\nexport default () => {\n  router.post(enable());\n  router.get(checkStatus());\n\n  return router.middleware()\n}\n","import {DATA_SOURCE_ENDPOINT} from \"./constants\";\nimport {StaticRatesStore} from \"../../static/rates\";\n\nconst axios = require('axios').default;\nconst scheduler = require('node-schedule');\n\nexport default class RatesSchedulerService {\n\n    static endpoint = DATA_SOURCE_ENDPOINT;\n\n    static instance = scheduler;\n\n    static job = null;\n\n    static status = 0;\n\n    static start(currency) {\n        this.job = this.instance.scheduleJob('*/45 * * * *', () => this.requestData(currency));\n        this.status = 1;\n    }\n\n    static stop() {\n        this.instance.cancelJob(this.job);\n        this.status = 0;\n    }\n\n    static dataFetched(currency, data) {}\n\n    static requestData(currency) {\n        if (StaticRatesStore.isRequiredTimePassed()) {\n            StaticRatesStore.updatePrevRequestTime();\n            console.log(new Date().toLocaleTimeString());\n\n            axios.get(`${this.endpoint}&currency=USDEUR,USDPLN,USDNOK,USDGBP,USDCHF,USDRUB`)\n                .then(response => this.dataFetched(currency, response.data))\n                .catch(console.error);\n        }\n    }\n\n    static requestDataImidiate(currency) {\n        console.log(new Date().toLocaleTimeString());\n\n        axios.get(`${this.endpoint}&currency=USDEUR,USDPLN,USDNOK,USDGBP,USDCHF,USDRUB`)\n            .then(response => this.dataFetched(currency, response.data))\n            .catch(console.error);\n    }\n}\n","'use strict';\n\nimport RatesController from \"../controller\";\nimport RatesDataService from \"../data.service\";\nimport {authMiddleware} from \"../../../guards/authMiddlware\";\nimport {AppLogger} from \"../../../logger\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new RatesController(new RatesDataService());\n\nexport const getRates = () => {\n  router.get('/pair', authMiddleware, async (ctx, next) => {\n    try {\n      const {base, second} = ctx.request.query;\n      const rates = await controller.getPair(base, second);\n\n      ctx.body = { message: 'Done', rates };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\nexport const getHistory = () => {\n  router.get('/history', authMiddleware, async (ctx, next) => {\n    try {\n      const {base, limit} = ctx.request.query;\n      const rates = await controller.getHistory(base, limit);\n\n      ctx.body = { message: 'Done', rates };\n    } catch (e) {\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\n","'use strict';\n\nexport default class RatesController {\n\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n    }\n\n    getPair(base, second) {\n        return this.dataService.getPair(base);\n    }\n\n    getHistory(base, number) {\n        return this.dataService.getHistory(base, number);\n    }\n\n}\n","import Realm from \"realm\";\nimport {RateSchema} from \"../../db/schemes/rates\";\nimport {AppLogger} from \"../../logger\";\n\nexport default class RatesDataService {\n\n    validCurrencies = ['USD', 'EUR', 'NOK', 'GBP', 'RUB', 'CHF', 'PLN'];\n\n    config = {\n        schema: [RateSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/rates/01.realm',\n    };\n\n    getPair(base) {\n        return Realm.open(this.config)\n            .then(realm => {\n                return realm.objects('Rate')\n                    .filtered(`base = \"${base}\"`)\n                    .sorted('id', true)\n                    .slice(0, 1);\n            }).catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    getHistory(base, number) {\n        return Realm.open(this.config)\n            .then(realm => {\n                return realm.objects('Rate')\n                    .filtered(`base = \"${base}\"`)\n                    .slice(0, number);\n            }).catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {getHistory, getRates} from './_routes';\n\nconst router = new Router();\n\nexport default () => {\n  router.get(getRates());\n  router.get(getHistory());\n\n  return router.middleware()\n}\n","'use strict';\n\nimport UsersController from \"../controller\";\nimport UsersDataService from \"../data.service\";\nimport {getClientIp} from \"../../../utils/network\";\nimport {getUserEmailFromSession} from \"../../../utils/session\";\nimport * as md5 from \"md5\";\nimport {Mailer} from \"../../../mailer/mailer\";\nimport {AppLogger} from \"../../../logger\";\n\nconst Router = require('koa-trie-router');\nconst router = new Router();\nconst controller = new UsersController(new UsersDataService());\n\nconst middleware = async (ctx, next) => {\n  ctx.type = 'json';\n  ctx.set('Access-Control-Expose-Headers', 'GoAway');\n\n  await next()\n};\n\nexport const register = () => {\n  router.post('/register', middleware, async (ctx, next) => {\n    try {\n      const resp = await controller.register(ctx.request.body);\n\n      ctx.status = resp.code;\n      ctx.body = { message: 'Done', resp };\n    } catch (e) {\n      ctx.status = 500;\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\nexport const login = () => {\n  router.post('/login', middleware, async (ctx, next) => {\n\n    try {\n      const user = await controller.getUser(ctx.request.body);\n\n      if (!!user.data) {\n        controller.storeSession(user.data.hashedEmail, getClientIp(ctx.request));\n\n        ctx.session.user = `${user.data.hashedEmail}$${Date.now()}`;\n        ctx.body = { message: 'Done', data: {\n          email: user.data.email,\n          name: user.data.name\n        }};\n      } else {\n        ctx.body = { message: 'Not found', data: {} };\n      }\n\n      ctx.status = user.code;\n    } catch (e) {\n      ctx.status = 500;\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n\n  return router.middleware();\n};\n\nexport const logout = () => {\n  router.post('/logout', middleware, async (ctx, next) => {\n\n    try {\n      controller.destroySession(getUserEmailFromSession(ctx));\n\n      ctx.status = 200;\n      ctx.body = { message: 'Done' };\n    } catch (e) {\n      ctx.status = 500;\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const restore = () => {\n  router.post('/restore', middleware, async (ctx, next) => {\n\n    try {\n      const params = await controller.initRestore(ctx.request.body.user);\n\n      ctx.status = params.code;\n      ctx.body = { message: 'Done' };\n    } catch (e) {\n      ctx.status = 500;\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\nexport const createPw = () => {\n  router.post('/create-pw', middleware, async (ctx, next) => {\n\n    try {\n      const params = await controller.createPw(ctx.request.body.pw, ctx.request.body.v);\n\n      ctx.status = params.code;\n      ctx.body = { message: 'Done', data: params };\n    } catch (e) {\n      ctx.status = 500;\n      ctx.body = { message: e.message };\n    }\n\n    await next();\n  });\n\n  return router.middleware();\n};\n\n\n","'use strict';\n\nimport {Mailer} from \"../../mailer/mailer\";\nimport {getRestoreHTML} from \"../../utils/email\";\n\nexport default class UsersController {\n\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n    }\n\n    register(data) {\n        return this.dataService.registerUser(data);\n    }\n\n    getUser(data) {\n        return this.dataService.getUser(data);\n    }\n\n    storeSession(email, ip) {\n        return this.dataService.storeSession(email, ip);\n    }\n\n    destroySession(email) {\n        return this.dataService.destroySession(email);\n    }\n\n    async initRestore(email) {\n        const params = await this.dataService.getRestoreToken(email);\n\n        if (params.data.token) {\n            Mailer.sendPwReset(email, getRestoreHTML(params.data.name, params.data.token))\n        }\n\n        return params;\n    }\n\n    createPw(pw, token) {\n        return this.dataService.createPw(pw, token);\n    }\n\n\n}\n","import Realm from \"realm\";\nimport * as bcrypt from \"bcrypt\";\nimport {AppLogger} from \"../../logger\";\nimport {UserSchema} from \"../../db/schemes/user\";\nimport {ResponseWrapper} from \"../../db/helpers/responseWrapper\";\nimport {SessionSchema} from \"../../db/schemes/session\";\nimport {sessionConfig} from \"../../middlewares\";\nimport * as md5 from \"md5\";\nimport {emailToRestoreToken} from \"../../utils/hash\";\n\nexport default class UsersDataService {\n\n    userConfig = {\n        schema: [UserSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/users/01.realm',\n    };\n\n    sessionConfig = {\n        schema: [SessionSchema],\n        deleteRealmIfMigrationNeeded: true,\n        path: './db/files/sessions/01.realm',\n    };\n\n    getUserUnsafe(email) {\n        return Realm.open(this.userConfig)\n            .then(realm => realm.objectForPrimaryKey('User', email))\n            .catch((e) => AppLogger.error(e));\n    }\n\n    getSession(email) {\n        return Realm.open(this.sessionConfig)\n            .then(realm => realm.objectForPrimaryKey('Session', email))\n            .catch((e) => AppLogger.error(e));\n    }\n\n    async getUser(data) {\n        const response = new ResponseWrapper();\n        const user = await this.getUserUnsafe(data.email);\n\n        if (!!user && bcrypt.compareSync(data.pw || '', user.pw || '')) {\n            response.data = {\n                hashedEmail: md5(user.email),\n                email: user.email,\n                name: user.name\n            };\n        } else {\n            response.error = 'Not found';\n            response.code = 404;\n        }\n\n        return response;\n    }\n\n    storeSession(email, ip) {\n        return Realm.open(this.sessionConfig)\n            .then(realm => {\n                realm.write(() => {\n                    realm.create('Session', {\n                        expired: Date.now() + sessionConfig.maxAge,\n                        id: email,\n                        info: ip\n                    }, Realm.UpdateMode.Modified);\n                });\n\n                realm.close();\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    destroySession(email) {\n        return Realm.open(this.sessionConfig)\n            .then(realm => {\n                const session = realm.objectForPrimaryKey('Session', email);\n\n                if (!!session) {\n                    realm.write(() => {\n                        realm.delete(session)\n                    });\n                }\n\n                realm.close();\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    async getRestoreToken(email) {\n        return new Promise(((resolve, reject) => {\n            Realm.open(this.userConfig)\n                .then(realm => {\n                    const response = new ResponseWrapper();\n                    const user = realm.objectForPrimaryKey('User', email);\n\n                    if (!!user && !user.restoreToken) {\n                        realm.write(() => {\n                            user.restoreToken = emailToRestoreToken(email);\n                            response.data = {\n                                token: user.restoreToken,\n                                name: user.name\n                            };\n\n                            resolve(response);\n                        });\n                    } else {\n                        response.data = {status: \"started\"};\n                        response.code = 208;\n                        resolve(response);\n                    }\n\n                    realm.close();\n                })\n                .catch((e) => {\n                    AppLogger.error(e);\n                    reject(e.message);\n                });\n        }));\n    }\n\n    registerUser(data) {\n        return Realm.open(this.userConfig)\n            .then(realm => {\n                const { email, pw, name } = data;\n                const response = new ResponseWrapper();\n                const userNotFound = realm.objects('User')\n                    .filtered(`email = \"${email}\"`).isEmpty();\n\n                if (userNotFound) {\n                    realm.write(() => {\n                        realm.create('User', {\n                            id: realm.objects('User').length + 1,\n                            pw: bcrypt.hashSync(pw, 10),\n                            name: name || email.split('@')[0],\n                            email: email\n                        }, Realm.UpdateMode.Never);\n\n                        response.data = { email };\n                    });\n                } else {\n                    response.error = 'User already exists';\n                    response.code = 200\n                }\n\n                realm.close();\n                return response;\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n    async createPw(pw, token) {\n        return Realm.open(this.userConfig)\n            .then(realm => {\n                const response = new ResponseWrapper();\n                const user = realm.objects('User')\n                    .filtered(`restoreToken = \"${token}\" LIMIT(1)`);\n\n                if (user[0]) {\n                    realm.write(() => {\n                        user[0].pw = bcrypt.hashSync(pw, 10);\n                        user[0].restoreToken = \"\";\n\n                        response.data = { status: 'Done' };\n                    });\n                } else {\n                    response.error = 'Failed';\n                }\n\n                realm.close();\n                return response;\n            })\n            .catch((e) => {\n                AppLogger.error(e)\n            });\n    }\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport {createPw, login, logout, register, restore} from './_routes';\n\nconst router = new Router();\n\nexport default () => {\n  router.post(register());\n  router.post(login());\n  router.post(logout());\n  router.post(restore());\n  router.post(createPw());\n\n  return router.middleware()\n}\n","'use strict';\n\nexport default class SessionController {\n\n    dataService;\n\n    constructor(_dataServiceInstance) {\n        this.dataService = _dataServiceInstance;\n    }\n\n    getSession(email) {\n        return this.dataService.getSession(email);\n    }\n\n\n}\n","'use strict';\n\nimport Router from 'koa-trie-router';\nimport mount from 'koa-mount';\n\nimport predictions from 'predictions';\nimport ratesScheduler from 'rates-scheduler';\nimport predictionsScheduler from 'predictions-scheduler';\nimport rates from 'rates';\nimport users from 'users';\nimport analyze from 'analyze';\n\nexport const router = new Router();\n\nexport default () => {\n    router.use(mount('/predictions', predictions()));\n    router.use(mount('/rates-scheduler', ratesScheduler()));\n    router.use(mount('/predictions-scheduler', predictionsScheduler()));\n    router.use(mount('/rates', rates()));\n    router.use(mount('/users', users()));\n    router.use(mount('/analyze', analyze()));\n\n    return router.middleware()\n}\n","\nexport class StaticRatesStore {\n\n    static prevSet = Date.now();\n\n    static requiredMsGap = 45 * 60 * 1000;\n\n    static latestBase = null;\n\n    static latestRates = {\n        USDEUR: 0,\n        USDNOK: 0,\n        USDGBP: 0,\n        USDRUB: 0,\n        USDCHF: 0,\n        USDPLN: 0,\n    };\n\n    static set(base, rates) {\n        this.latestBase = base;\n        this.latestRates = rates;\n    }\n\n    static ratesHaveValue() {\n        return !!this.latestRates && !!Object.keys(this.latestRates).length;\n    }\n\n    static isRequiredTimePassed() {\n        return Date.now() - this.prevSet > this.requiredMsGap;\n    }\n\n    static updatePrevRequestTime() {\n        this.prevSet = Date.now();\n    }\n\n    static isNewValue(base, rates) {\n        return this.latestBase !== base ||\n            this.latestRates.USDEUR.toString() !== rates.USDEUR.toString() ||\n            this.latestRates.USDNOK.toString() !== rates.USDNOK.toString() ||\n            this.latestRates.USDGBP.toString() !== rates.USDGBP.toString() ||\n            this.latestRates.USDRUB.toString() !== rates.USDRUB.toString() ||\n            this.latestRates.USDCHF.toString() !== rates.USDCHF.toString() ||\n            this.latestRates.USDPLN.toString() !== rates.USDPLN.toString();\n    }\n\n}\n","import {AppLogger} from \"../logger\";\n\nconst tf = require('@tensorflow/tfjs-node');\n\nexport class PredictionTFService {\n\n    isRunning = false;\n\n    model = tf.sequential();\n\n    inputTnsr = null;\n    labelTnsr = null;\n\n    _data = [];\n\n    constructor(data) {\n        this.configure();\n        this.init(data);\n    }\n\n    getPrediction(params, inputMax, inputMinVal, labelMinVal, labelMax) {\n        return tf.tidy(() => {\n            const normalizedPredTnsr = tf.tensor2d(params, [1, params.length]);\n            const normalizedPredVals = normalizedPredTnsr.sub(inputMinVal).div(inputMax.sub(inputMinVal));\n            const predResult = this.model.predict(normalizedPredVals.reshape([1, params.length]));\n            const readablePred = predResult.mul(labelMax.sub(labelMinVal)).add(labelMinVal);\n\n            return readablePred.dataSync();\n        });\n    }\n\n    getNormalizedValues() {\n        return tf.tidy(() => {\n            const inputMax = this.inputTnsr.max();\n            const inputMinVal = this.inputTnsr.min();\n            const labelMax = this.labelTnsr.max();\n            const labelMinVal = this.labelTnsr.min();\n\n            return {\n                inputs: this.inputTnsr.sub(inputMinVal).div(inputMax.sub(inputMinVal)),\n                labels: this.labelTnsr.sub(labelMinVal).div(labelMax.sub(labelMinVal)),\n                inputMax,\n                inputMinVal,\n                labelMax,\n                labelMinVal,\n            }\n        });\n    }\n\n    init(items) {\n        this._data = items || [];\n\n        this.initTensors();\n    }\n\n    initTensors() {\n        tf.util.shuffle(this._data);\n        this.initInputTnsr();\n        this.initLabelsTnsr();\n    }\n\n    initInputTnsr() {\n        this.inputTnsr = tf.tensor(this._data.map((item) => ([\n            item.volatility, item.forecast, item.realRate, item.predRate\n        ])));\n    }\n\n    initLabelsTnsr() {\n        this.labelTnsr = tf.tensor2d(\n            this._data.map((item) => item.finalRate\n        ), [this._data.length, 1]);\n    }\n\n    configure() {\n        this.model.add(tf.layers.dense({ units: 1, inputShape: [4] }));\n        this.model.add(tf.layers.dense({ units: 1, useBias: true }));\n        this.model.compile({ loss: 'meanSquaredError', optimizer: 'sgd' });\n    }\n\n    destroy() {\n        this.model.dispose()\n    }\n\n    async getResult(params) {\n        const { inputMax, inputMinVal, labelMinVal, labelMax } = this.getNormalizedValues();\n\n        return this.getPrediction(params, inputMax, inputMinVal, labelMinVal, labelMax);\n    }\n\n    trainModel(epochs, batchSize) {\n        const { inputs, labels } = this.getNormalizedValues();\n\n        return new Promise((resolve, reject) => {\n            if (!this.isRunning) {\n                this.isRunning = true;\n                this.model.fit(inputs, labels, {\n                    batchSize,\n                    epochs\n                }).then(() => {\n                    this.isRunning = false;\n                    resolve('trainingDone');\n                });\n            }\n        });\n    }\n\n\n\n}\n","\n\nexport function getRestoreHTML(name, token) {\n    return `\n        Hi ${name}, <br>\n        Need to reset your password? Click on the link below to get you in.  <br>\n        <a href=\"http://localhost:4000/reset-password?v=${token}\">Create new password</a>\n    `;\n}\n","import * as bcrypt from \"bcrypt\";\n\nexport function emailToRestoreToken(email) {\n    return bcrypt.hashSync(email + \"_frvr3$R34gTgtr5_\", 5);\n}\n","export function getClientIp(req) {\n    return req.headers['referer'];\n}\n","\nexport function getUserEmailFromSession(ctx) {\n    return (ctx.session.user || '').split('$')[0];\n}\n","module.exports = require(\"@koa/cors\");","module.exports = require(\"@tensorflow/tfjs-node\");","module.exports = require(\"axios\");","module.exports = require(\"bcrypt\");","module.exports = require(\"fs\");","module.exports = require(\"koa\");","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-mount\");","module.exports = require(\"koa-session-auth\");","module.exports = require(\"koa-static\");","module.exports = require(\"koa-trie-router\");","module.exports = require(\"md5\");","module.exports = require(\"node-schedule\");","module.exports = require(\"nodemailer\");","module.exports = require(\"ramda\");","module.exports = require(\"realm\");","module.exports = require(\"uuid\");"],"sourceRoot":""}